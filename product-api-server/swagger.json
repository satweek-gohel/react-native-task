{
  "openapi": "3.0.0",
  "info": {
    "title": "Product API",
    "description": "API for managing products in the database",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "summary": "Get all products",
        "description": "Fetch all products from the database",
        "responses": {
          "200": {
            "description": "A list of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "description": "Add a new product to the database",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get a product by ID",
        "description": "Fetch a single product by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the product to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a product by ID",
        "description": "Remove a product from the database by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the product to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "summary": "Update a product by ID",
        "description": "Update an existing product by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the product to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "60c72b2f5f1b2c001c8e4e8e"
          },
          "name": {
            "type": "string",
            "example": "Product Name"
          },
          "price": {
            "type": "number",
            "example": 100.5
          },
          "category": {
            "type": "string",
            "example": "Electronics"
          },
          "description": {
            "type": "string",
            "example": "A brief description of the product"
          },
          "image": {
            "type": "string",
            "example": "https://example.com/product.jpg"
          }
        }
      },
      "ProductInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Product Name"
          },
          "price": {
            "type": "number",
            "example": 100.5
          },
          "category": {
            "type": "string",
            "example": "Electronics"
          },
          "description": {
            "type": "string",
            "example": "A brief description of the product"
          },
          "image": {
            "type": "string",
            "example": "https://example.com/product.jpg"
          }
        }
      }
    }
  }
}
